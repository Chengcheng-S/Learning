go test 命令是一个按照一定约定和组织的测试代码的驱动。在包目录内，所以有_test.go为后缀名的源代码文件都是 go test测试的一部分，不会被 go build 编译到最终可执行的文件中

在*_test.go 文件中有三种类型的函数 单元测试函数、基准测试函数和示例函数
                格式           	作用
测试函数   函数名前缀为Test   测试程序的一些逻辑行为是否正确
基准函数   函数名的前缀为Benchmark  测试函数的性能
示例函数   函数名的前缀为Example    为文档提供示例文档

go test命令会遍历所有的*_test.go 文件中符合上述命名规则的函数，然后生成一个临时的main包用于调用相应的测试函数，然后构建并运行、报告测试结果，最后清理测试中生成的临时文件


测试函数
   测试函数的格式  每个测试函数必须导入testing包，测试函数的基本格式
   func  TeatName(t *testing.T){    }

测试函数的名字必须以Test 开头，可选的后缀名必须以大写字母开头
  func TestAdd(t *testing.T){...}
  func TestSum(t *testing.T){...}


// 执行测试用例
go test 

go test  -v

// 运行某一条测试用例
go test -run=func_name/test


go test -cover 当前测试函数的测试覆盖率

go test -cover -coverprofile=file_name  生成测试报告

go tool cover -html=file_name  以html的方式打开文件



性能基准测试

go test -bench=func_name


go test -bench=func_name -benchmem  获取每次操作内存的数据












go get -u github.com/smartystreets/goconvey/convey




