字符串使用双引号包裹，
单引号包裹的是字符 单独的汉字、字母、符号表示一个字符



定义多行 字符串时使用反引号 `

字符串遍历：
for i:=0;i<len(s1);i++{fmt.Println(s[i])}

for _,value :=range s1{fmt.Printf("%c \n",value)}

字符串不能修改

//  字符串长度
	fmt.Println(len(s1))
	var s2 string = "this is \n"
	var s3 string = "GOlang"
	//  字符串拼接
	fmt.Println(s2 + s3)

        s7 :=fmt.Sprintf("%s%s",s2,s3)
    fmt.Println(s7)


字符串切割： strings.Split  按照指定的字符串来切割字符串，分割后不包含指定的字符
  // 字符串切割
	fmt.Println(strings.Split(s2, "\n"))

SplitN 按照指定字符串切割字符串，并指定切割为几分
fmt.Println(strings.SplitN(s2, "\n", 3))
//[this is   go    is 
 a lang]



strings.SplitAfter 按照指定字符串切割原有字符串，切割后包含指定的字符串   

strings.SplitAfterN  按照指定字符串切割原有字符串, 切割为指定的份数, 切割完包含指定字符

strings.Fields(str)  按照空格切割字符串，连续多余空格按照一个处理

strings.Func 自定义分割字符串的标准
strings.Func(str,splt)


字符串包含：strings.Contains()

字符串前缀： strings.HasPrefix()
字符串后缀： strings.HasSuffix()
字符串出现位置：strings.Index（）

拼接 strings.join

替换 strings.replace()

重复： strings.repeat

小写 ： strings.tolower
大写：strings.toupper

字符串截取str[start:end]


字符串和其他类型转换：


 /*
    字符串转整数
     */
     si,err:=strconv.Atoi("12")
     fmt.Printf("%T,%d\n",si,si)
/*
整数转字符串
 */
     int_i:=strconv.Itoa(15)
     fmt.Printf("%T,%s\n",int_i,int_i)





