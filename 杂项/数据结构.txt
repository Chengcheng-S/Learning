稀疏数组
	一个数组中大部分元素为0，或者为同一个值的数组时，可以使用稀疏数组来保存该数组

稀疏数组的处理方式
1）记录数据有几行几列，有多少不同值
2）把具有不同值得元素得行列及值记录在一个小规模得数组中，从而缩小程序得规模。
案例： 记录棋盘的棋子



队列（queue）
有序列表，可以用数组或链表实现
遵循先入先出的原则

数组模拟队列
使用数组的结构存储队列的数据，则队列数组的声明如下：
其中maxSize是该队列的最大容量。
队列的输出、输入分别从前后端来处理，需要两个变量front和rear分别记录队列前后端下标，front会随着数据的输出而改变，而rear则是随着数据输入而改变。



数组完成非环形的队列

将数据存入队列时称为addqueue，处理分为两步：
	1）尾指针向后移动，rear+1，font==rear[空]
	2）尾指针rear小于等于队列的最大下标maxSize-1，将数据存入rear所致的数组元素中，否则无法存入数据。
	rear==maxSize-1  【队列已满】





顺序表： 数组、内存排列在一起
make([]slice,len,cap) len=0 表示没有开辟内存空间
迭代器模式： 
	用于顺序访问集合对象的元素，不需要知道集合对象的底层表示，迭代器属于行为模式。
提供一种方法顺序访问一个集合对象中的各个元素，而无需暴露该对象的内部表示。
主要解决： 不同的方式来遍历整个集合对象
用途： 遍历一个聚合对象
	访问一个聚合对象的内容无需暴露内部表示
	需要为聚合对象提供多种遍历方式
	为遍历不同的聚合结构提供一个统一接口
优点：
	支持以不同的方式遍历一个聚合对象
	迭代器简化聚合类
	在同一个聚合上可以有多个遍历
	在迭代器模式中，增加新的聚合类和迭代器类，无需修改原有的程序

缺点：由于迭代器模式将存储数据和遍历数据的职责分离，增加新的聚合类需要对应增加新的迭代器类，类的个数成对增加，这在一定程度上增加了系统的复杂性。



递归 栈
递归=栈+循环


队列 广度遍历
栈/递归 深度遍历

循环队列： 队列的前后各有一个指针。

时间复杂度
o后面的括号中一个函数，指明某个算法的耗时/耗空间域数据增长量之间的关系，n代表输入数据的量。
   如时间复杂度o(n)，代表数据量增大几倍，耗时也增大几倍，如常见的遍历算法。

时间复杂度O(N^2)  数据量增大n倍式，耗时增大n的平方倍，比线性更高的时间复杂度，如冒泡排序，对n的数列需要扫描n*n次

o（logn）当数据增大n倍时，耗时增加logn倍（以2为底）
	二分查找法就是o(logn)算法，没查找一次排除一半的可能


o(nlogn) n*logn  这个复杂度低于平方，归并排序(快速排序也是)o(nlong)的时间复杂度

o(1) 最低的时空复杂度，耗时/耗空间与输入的数据大小无关，无论输入多大的数据，耗时/耗空间不变，哈希算法就是典型的o(1)时间复杂度，无论数据规模多大，都可以再一次计算后找到目标
数组存储：内存中连续存储   查找速度快  查找修改o(1),删除插入o(n)

在平均情况下，快速排序最快；
在最好情况下，插入排序和起泡排序最快；
在最坏情况下，堆排序和归并排序最快。

链表 ：分散式存储， 块式存储，  删除插入o(1)  查找、修改o(n)
使用离散内存

    非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针连接次序实现的，链表由一系列的节点(链表中的每个元素称为节点)组成， 节点包括：1、存储的数据元素的数据域，2、存储下一个节点地址的指针域
    相比于线性表顺序结构，操作复杂，不必须按照顺序存储，链表插入时可以达到o(1)的复杂度。另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)。

使用链表可以克服数组链表需要预先知道数据大小的缺点，可以充分利用计算机的内存空间，实现灵活的内存动态管理，
链表失去了数组随机读取的优点，空间开销较大
链表允许插入和移除表上任意位置上的节点，但不允许随机存取，链表种类：单向链表、双向链表、循环链表。


轻量级  数组栈 深度遍历    数组队列  广度遍历
重量级	链表栈 深度遍历	   链表队列  广度遍历



排序： 
选择排序：


字符串比较  strings.Compare(str,str)
相等 0   小于 -1  大于1 
先比较首字母  左侧>右侧  1     左侧<右侧-1
一次往后对比字母



插入排序









哈希表(散列)
散列表，根据关键码值直接及逆行访问的数据结构。通过关键马志映射到表中一个位置来访问记录，以加快查找的速度
这个映射函数称为散射函数，存放记录称为数组或者散列表

哈希表实现雇员的增删改查，不使用数据库，速度快，


