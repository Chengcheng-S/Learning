激活  http://idea.iblue.me/



go mod init example.com/m



GOPROXY 环境变量
Go 1.13 及以上（推荐）
打开你的终端并执行：

$ go env -w GOPROXY=https://goproxy.cn,direct
完成。

macOS 或 Linux
打开你的终端并执行：

$ export GOPROXY=https://goproxy.cn
或者

$ echo "export GOPROXY=https://goproxy.cn" >> ~/.profile && source ~/.profile
完成。

Windows
打开你的 PowerShell 并执行：

C:\> $env:GOPROXY = "https://goproxy.cn"
不过，需要依赖于 go module 功能。可通过 export GO111MODULE=on 开启 MODULE。

如果项目不在 GOPATH 中，则无法使用 go get ...，但可以使用 go mod ... 相关命令。

也可以通过置空这个环境变量来关闭，export GOPROXY=。

批话那么其实只需要：
go env -w GOPROXY=https://goproxy.cn,direct
go env -w  GO111MODULE=on
go env -w GOPROXY=https://mirrors.aliyun.com/goproxy/









go get 获取远程包  
go get -d 只下载不安装
go get -f 只有在你包含了 -u 参数的时候才有效，不让 -u 去验证 import 中的每一个都已经获取了，这对于本地 fork 的包特别有用

go get -fix 在获取源码之后先运行fix，然后再去做其他的事情

go get -t 同时也下载需要为运行测试所需要的包

go get -u  强制使用网络去更新包和他依赖的包， 下载丢失的包，但不会更新已经存在的包

go get -v 显示执行的命令，操作流程的日志及信息，方便检查错误


go install的执行路径为  ${gopath}/src/   加上你的go install命令后面跟的目录

而不是你这个包的绝对路劲或者相对路径

这种官方库在github上的托管位置 一般在 https://github.com/golang/xxx

比如     golang.org/x/text

就在      https://github.com/golang/text


快捷键


Ctrl+/ 或 Ctrl+Shift+/ 注释（// 或者/…/ ）
Ctrl+D 复制行
Ctrl+X 删除行
快速修复 alt+enter (modify/cast)
代码提示 alt+/
ctr+G 定位某一行
Shift+F6 重构-重命名
Ctrl+R 替换文本
Ctrl+F 查找文本

Ctrl+E 最近打开的文件
Ctrl+J 自动代码

组织导入 ctr+alt+O
格式化代码 ctr+alt+L
大小写转化 ctr+shift+U




